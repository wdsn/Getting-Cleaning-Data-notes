wd()
getwd()
getwd()
setwd("../")
getwd()
setwd("../")
setwd("./New folder")
getwd()
file.exists("directoryName")
dir.create("directoryName")
file.exists("directoryName")
download.file()
tables()
install.packages("data.tables")
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?download.file()
wd()
getwd()
dir.create("2006 Housing")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "2006 Housing", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "2006 Housing")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "2006 Housing")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "2006 Housing")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./2006 Housing/Housing2006.csv")
head(read.csv("./2006 Housing/Housing2006.csv", header = TRUE))
Housing <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
summary(Housing)
rm(list=ls())
head(read.csv("./2006 Housing/Housing2006.csv", header = TRUE))
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE))
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
row.names(Data)
colnames(Data)
colnames(Data)
nrow(Data$VAL == 24)
Data <- Data$VAL
summary(Data)
is.character(Data)
class(Data)
plot(Data)
Data <- Data(Data == 24)
Data <- (Data == 24)
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
nrow(Data$VAL == 24)
Data <- Data$VAL
count(Data == 24)
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
nrow(Data$VAL == 24)
x <- (Data$VAL == 24)
x <- x == TRUE
str(Data)
str(x)
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
x <- subset.data.frame(Data$VAL == TRUE)
x <- subset.data.frame(Data, Data$VAL == TRUE)
View(x)
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
x <- subset.data.frame(Data, Data$VAL == 24)
View(x)
nrow(subset.data.frame(Data, Data$VAL == 24))
Answer
# Store answer
Answer <- nrow(subset.data.frame(Data, Data$VAL == 24))
Answer
rm(list=ls())
# Read CSV
Data <- read.csv("./2006 Housing/Housing2006.csv", header = TRUE)
# Store answer
Answer <- nrow(subset.data.frame(Data, Data$VAL == 24))
Answer
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NaturalGas.xlsx")
install.packages("xlsx")
library("xlsx", lib.loc="D:/Documents/Documents/Professional/Courses/3. Getting and Cleaning Data/Getting and Cleaning Data R/packrat/lib/x86_64-w64-mingw32/3.4.4")
summary(read.xlsx)
summary(read.xlsx())
?read.xlsx()
summary(read.xlsx("Natrual.xlsx", colIndex = 7:15, rowIndex = 18:23))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NaturalGas.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NaturalGas.xlsx")
summary(read.xlsx("Natrual.xlsx", 1, colIndex = 7:15, rowIndex = 18:23))
summary(read.xlsx("NatrualGas.xlsx", 1, colIndex = 7:15, rowIndex = 18:23))
getwd()
summary(read.xlsx("NaturalGas.xlsx", 1, colIndex = 7:15, rowIndex = 18:23))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NaturalGas.xlsx")
summary(read.xlsx("NaturalGas2.xlsx", 1, colIndex = 7:15, rowIndex = 18:23))
head(read.xlsx("NaturalGas2.xlsx", 1, colIndex = 7:15, rowIndex = 18:23))
dat <- read.xlsx("NaturalGas2.xlsx", 1, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "FRestaurants")
xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
install.packages("XLSX")
install.packages("XML")
xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
XML::xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
XML::xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "FRestaurants.xml")
XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
XML::xmlName(rootNode)
XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
data <- XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
rootNode
getNodeSet()
XML::getNodeSet()
XML::getNodeSet(data)
rm(list=ls())
data <- XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
XML::getNodeSet(data)
XML::getNodeSet()
XML::xmlTreeParse("FRestaurants.xml", useInternal=TRUE)
getNodeSet()
XML::getNodeSet()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "HousingIdaho.csv")
?fread()
install.packages("data.table")
?fread()
library("data.table", lib.loc="D:/Documents/Documents/Professional/Courses/3. Getting and Cleaning Data/Getting and Cleaning Data R/packrat/lib/x86_64-w64-mingw32/3.4.4")
?fread()
fread("HousingIdaho.csv", header = TRUE)
DT <- fread("HousingIdaho.csv", header = TRUE)
# microbenchmark package allows you to run multiple versions of query "n" amount of times
# the example below runs 100 times
#install.packages("microbenchmark")
library("microbenchmark")
# microbenchmark package allows you to run multiple versions of query "n" amount of times
# the example below runs 100 times
install.packages("microbenchmark")
mbm = microbenchmark(
v3 = sapply(split(DT$pwgtp15,DT$SEX),mean),
v6 = DT[,mean(pwgtp15),by=SEX],
v7 = tapply(DT$pwgtp15,DT$SEX,mean),
v8 = mean(DT$pwgtp15,by=DT$SEX),
times=100
)
library("microbenchmark", lib.loc="D:/Documents/Documents/Professional/Courses/3. Getting and Cleaning Data/Getting and Cleaning Data R/packrat/lib/x86_64-w64-mingw32/3.4.4")
mbm = microbenchmark(
v3 = sapply(split(DT$pwgtp15,DT$SEX),mean),
v6 = DT[,mean(pwgtp15),by=SEX],
v7 = tapply(DT$pwgtp15,DT$SEX,mean),
v8 = mean(DT$pwgtp15,by=DT$SEX),
times=100
)
mbm
# had to remove s from https in above xml file. This method commented below:
#   fileXML <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#   doc <- xmlTreeParse(fileXML,useInternal = TRUE)
# using RCurl, can leave https.  Use getURL first, then parse with xmlParse
xData <- getURL(fileXML) # This allows you to use https
doc <- xmlParse(xData)
rootNode <- xmlRoot(doc)
#xmlName(rootNode) # just displays top root node name
# one version, no data frame required - no need for zips, zips_dt
sum(xpathSApply(rootNode, "//zipcode", xmlValue) == "21231")
install.packages("RCurl")
